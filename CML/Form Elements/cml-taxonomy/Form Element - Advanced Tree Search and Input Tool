Form Element - Advanced Tree Search and Input Tool - cml:taxonomy

- Renders a widget that allows contributors to search and browse through a hierarchical list of items (a taxonomy) and select an item (or multiple) to be submitted. Taxonomy data must be formatted according to the Taxonomy Data Format section below.

<img src="sample_taxonomy.png" />

Additional Attributes

[code]src[/code]
The taxonomy datasource. It can be either a URL or the name of a Javascript variable defined in the customer Javascript portion of the CML editor. Javascript variables containing taxonomy dta should be in the global scope, i.e. they should be assigned without using the [code]var[/code] keyword:

[code]
// In your job's cml 
<cml:taxonomy src="myTaxonomy" />  

// In your job's javascript 
myTaxonomy = { 
// Taxonomy data (see example data below)... 
};  

// WRONG!!! Don't use the 'var' keyword 
var myTaxonomy = { 
// Taxonomy data (see example data below)... 
};
[/code]

URLs must accept the parameter [code]callback[/code] and return a JSONP response wrapped in the function specified by the [code]callback[/code] parameter. For example, if the URL that serves taxonomy data is [code]http://www.myserver.com/taxonomy[/code], issuing a GET to [code]http://www.myserver.com/taxonomy?callback=myCallback[/code] should return the JSONP response:

[code]
myCallback(
// My taxonomy data... 
)
[/code]

[code]root-select[/code]
If set to [code]"true"[/code], the taxonomy tool will only allow contributors to select top-level items, while still being able to search and browse the full taxonomy. This is useful when only a general category is desired. By default, only taxonomy endpoints are selectable.

[code]multi-select[/code]
If set to [code]"true"[/code], the taxonomy tool will allow contributors to select multiple items. By default, a contributor can only select one item.

[code]select-all[/code]
If set to [code]"true"[/code], every taxonomy item will be selectable (normally only taxonomy endpoints are selectable).

[code]selectable[/code]
Add taxonomy items as selectable in the tool (normally only taxonomy endpoints are selectable). Accepts a comma-separated list of taxonomy item IDs surrounded by square brackets, e.g. [code]"[1,2,3,4]"[/code]

[code]nonselectable[/code]
Accepts a comma separated list of taxonomy item IDs to remove as selectable in the tool, e.g. [code]"[5,6,7,8]"[/code]

[code]top-level[/code]
Accepts a comma-separated list of taxonomy item IDs to show as top-level items in the widget. This will override the top level items set in the taxonomy JSON.

[code]search-src[/code]
Accepts a URL that accepts the parameters [code]q[/code] and [code]callback[/code] and provides taxonomy search results for the query specified by the [code]q[/code] parameter as JSONP wrapped in the function specified by the [code]callback[/code] parameter. When this attribute is provided, a search box will be rendered below the taxonomy tool, allowing the contributor to search through the taxonomy.

For example, if the search URL is [code]http://www.myserver.com/taxonomy_search[/code], issuing a GET to [code]http://www.myserver.com/taxonomy_search?callback=myCallback&q=dogs[/code] should return a JSONP response formatted like so:

[code]
myCallback( 
[ 
{'name': "Pet Supplies > Dog Dishes", "id": "1234"}, 
{'name': "Books > Doggies", "id": "5678"} 
] 
)
[/code]

Search results show be an array of Javascript objects (as show above) with the following attributes:

	- [code]name (String, required):[/code] The name of the taxonomy item to display when search results are rendered.
	- [code]id (String, required):[/code] The taxonomy item ID of the search result.

[code]log-search[/code]
If set to [code]"true"[/code], a field containing a comma-separated list of search queries will be returned with the contributor's judgment. This is useful when tuning search results. This attribute will be ignored unless [code]search-src[/code] is set.

Taxonomy Data Format

Taxonomy data should be in the JSON format shown below. Each taxonomy item should be associated with a category ID.
[code]
{ 
'topLevel': [1,2], 
'taxonomyItems': { 
'1': { 
'title': 'Books', 
'summary': 'Stuff you\'d find in a library', 
'children': ['3','4'] 
},  

'2': { 
'title': 'Shoes', 
'summary': 'Stuff you\'d find in a shoebox', 
'children': ['5','6'] 
},  

'3': { 
'title': 'Good books', 
'summary': 'Books you want to read, not {$4}', 
'parent': '1' 
},  

'4': { 
'title': 'Bad books', 
'summary': 'Books that suck', 
'parent': '1' 
},  

'5': { 
'title': 'Women\'s shoes', 
'summary': 'Shoes for dudettes', 
'parent': '2' 
},  

'6': { 
'title': 'Men\'s shoes', 
'summary': 'Shoes for dudes', 
'parent': '2' 
} 
} 
}
[/code]

[code]topLevel[/code]
An array of root-level item IDs for your taxonomy. The items with these IDs will be the first ones shown to the contributor when they see the taxonomy tool.

[code]taxonomyItems[/code]
A Javascript object containing the actual taxonomy items, keyed by item ID. Each taxonomy item can have the following attributes:
	- [code]title[/code] (String, required): The name of the taxonomy item that will show up in the tool.
	- [code]summary[/code] (String, optional): A brief description of the taxonomy item. Links to other items can be included by enclosing the item ID preceeded by a dollar sign in curly braces, e.g. [code]{$4}[/code]
	- [code]parent[/code] (String, required): The item ID of the item's parent. Required on items that are children of other items.
	- [code]children[/code] (Array, required): An array of taxonomy IDs of the item's children. Require on items that are parents of other items.
	- [code]related[/code] (Array, optional): An array of taxonomy IDs of items related to this item. Related items will be listed beneath the item description in the taxonomy tool.

CML Taxonomy and CML Logic
The [code]cml:taxonomy[/code] widget does not presently work as a CML only-if logic dependency. For example, using the following CML,
[code]
<cml:taxonomy name="taxonomyResponse" src="myTaxonomy" />  
<cml:text name="textResponse" only-if="taxonomyResponse" />
[/code]
the [code]cml:text[/code] field will appear regardless of whether or not the [code]cml:taxonomy[/code] field contained a value.



